{"version":3,"sources":["../../lib/Switch.js"],"names":["Switch","props","context","handleSwitch","value","state","onValueChange","disabled","changeValueImmediately","propValue","animateSwitch","setState","cb","Animated","parallel","spring","transformSwitch","toValue","circleSize","switchLeftPx","switchRightPx","timing","backgroundColor","duration","circleColor","circleBorderColor","start","Value","prevProps","backgroundActive","backgroundInactive","circleActiveColor","circleInActiveColor","activeText","inActiveText","containerStyle","activeTextStyle","inactiveTextStyle","barHeight","circleInactiveBorderColor","circleActiveBorderColor","circleBorderWidth","innerCircleStyle","outerCircleStyle","renderActiveText","renderInActiveText","renderInsideCircle","switchWidthMultiplier","interpolatedColorAnimation","interpolate","inputRange","outputRange","interpolatedCircleColor","interpolatedCircleBorderColor","styles","container","width","height","borderRadius","animatedContainer","left","text","paddingRight","circle","borderWidth","borderColor","paddingLeft","Component","propTypes","PropTypes","func","bool","string","number","circleBorderActiveColor","circleBorderInactiveColor","object","defaultProps","alignItems","justifyContent","StyleSheet","create","flex","flexDirection","color"],"mappings":"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","file":"Switch.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Animated,\n  PanResponder,\n  TouchableWithoutFeedback,\n  ViewPropTypes\n} from \"react-native\";\nimport PropTypes from \"prop-types\";\n\nexport class Switch extends Component {\n  static propTypes = {\n    onValueChange: PropTypes.func,\n    disabled: PropTypes.bool,\n    activeText: PropTypes.string,\n    inActiveText: PropTypes.string,\n    backgroundActive: PropTypes.string,\n    backgroundInactive: PropTypes.string,\n    value: PropTypes.bool,\n    circleActiveColor: PropTypes.string,\n    circleInActiveColor: PropTypes.string,\n    circleSize: PropTypes.number,\n    circleBorderActiveColor: PropTypes.string,\n    circleBorderInactiveColor: PropTypes.string,\n    activeTextStyle: PropTypes.object,\n    inactiveTextStyle: PropTypes.object,\n    containerStyle: PropTypes.object,\n    barHeight: PropTypes.number,\n    circleBorderWidth: PropTypes.number,\n    innerCircleStyle: PropTypes.object,\n    renderInsideCircle: PropTypes.func,\n    changeValueImmediately: PropTypes.bool,\n    innerCircleStyle: PropTypes.object,\n    outerCircleStyle: PropTypes.object,\n    renderActiveText: PropTypes.bool,\n    renderInActiveText: PropTypes.bool,\n    switchLeftPx: PropTypes.number,\n    switchRightPx: PropTypes.number,\n    switchWidthMultiplier: PropTypes.number\n  };\n\n  static defaultProps = {\n    value: false,\n    onValueChange: () => null,\n    renderInsideCircle: () => null,\n    innerCircleStyle: {},\n    disabled: false,\n    activeText: \"On\",\n    inActiveText: \"Off\",\n    backgroundActive: \"green\",\n    backgroundInactive: \"gray\",\n    circleActiveColor: \"white\",\n    circleInActiveColor: \"white\",\n    circleBorderActiveColor: \"rgb(100, 100, 100)\",\n    circleBorderInactiveColor: \"rgb(80, 80, 80)\",\n    circleSize: 30,\n    barHeight: null,\n    circleBorderWidth: 1,\n    changeValueImmediately: true,\n    innerCircleStyle: { alignItems: \"center\", justifyContent: \"center\" },\n    outerCircleStyle: {},\n    renderActiveText: true,\n    renderInActiveText: true,\n    switchLeftPx: 2,\n    switchRightPx: 2,\n    switchWidthMultiplier: 2\n  };\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      value: props.value,\n      transformSwitch: new Animated.Value(\n        props.value\n          ? props.circleSize / props.switchLeftPx\n          : -props.circleSize / props.switchRightPx\n      ),\n      backgroundColor: new Animated.Value(props.value ? 75 : -75),\n      circleColor: new Animated.Value(props.value ? 75 : -75),\n      circleBorderColor: new Animated.Value(props.value ? 75 : -75)\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const { value } = this.props;\n    if (prevProps.value === this.props.value) {\n      return;\n    }\n    if (prevProps.disabled) {\n      return;\n    }\n\n    this.animateSwitch(value, () => this.setState({ value }));\n  }\n\n  handleSwitch = () => {\n    const { value } = this.state;\n    const {\n      onValueChange,\n      disabled,\n      changeValueImmediately,\n      value: propValue\n    } = this.props;\n    if (disabled) {\n      return;\n    }\n\n    if (changeValueImmediately) {\n      this.animateSwitch(!propValue);\n      onValueChange(!propValue);\n    } else {\n      this.animateSwitch(!value, () =>\n        this.setState({ value: !value }, () => onValueChange(this.state.value))\n      );\n    }\n  };\n\n  animateSwitch = (value, cb = () => {}) => {\n    Animated.parallel([\n      Animated.spring(this.state.transformSwitch, {\n        toValue: value\n          ? this.props.circleSize / this.props.switchLeftPx\n          : -this.props.circleSize / this.props.switchRightPx\n      }),\n      Animated.timing(this.state.backgroundColor, {\n        toValue: value ? 75 : -75,\n        duration: 200\n      }),\n      Animated.timing(this.state.circleColor, {\n        toValue: value ? 75 : -75,\n        duration: 200\n      }),\n      Animated.timing(this.state.circleBorderColor, {\n        toValue: value ? 75 : -75,\n        duration: 200\n      })\n    ]).start(cb);\n  };\n\n  render() {\n    const {\n      transformSwitch,\n      backgroundColor,\n      circleColor,\n      circleBorderColor\n    } = this.state;\n\n    const {\n      backgroundActive,\n      backgroundInactive,\n      circleActiveColor,\n      circleInActiveColor,\n      activeText,\n      inActiveText,\n      circleSize,\n      containerStyle,\n      activeTextStyle,\n      inactiveTextStyle,\n      barHeight,\n      circleInactiveBorderColor,\n      circleActiveBorderColor,\n      circleBorderWidth,\n      innerCircleStyle,\n      outerCircleStyle,\n      renderActiveText,\n      renderInActiveText,\n      renderInsideCircle,\n      switchWidthMultiplier,\n      value\n    } = this.props;\n\n    const interpolatedColorAnimation = backgroundColor.interpolate({\n      inputRange: [-75, 75],\n      outputRange: [backgroundInactive, backgroundActive]\n    });\n\n    const interpolatedCircleColor = circleColor.interpolate({\n      inputRange: [-75, 75],\n      outputRange: [circleInActiveColor, circleActiveColor]\n    });\n\n    const interpolatedCircleBorderColor = circleBorderColor.interpolate({\n      inputRange: [-75, 75],\n      outputRange: [circleInactiveBorderColor, circleActiveBorderColor]\n    });\n\n    return (\n      <TouchableWithoutFeedback onPress={this.handleSwitch}>\n        <Animated.View\n          style={[\n            styles.container,\n            containerStyle,\n            {\n              backgroundColor: interpolatedColorAnimation,\n              width: circleSize * switchWidthMultiplier,\n              height: barHeight || circleSize,\n              borderRadius: circleSize\n            }\n          ]}\n        >\n          <Animated.View\n            style={[\n              styles.animatedContainer,\n              {\n                left: transformSwitch,\n                width: circleSize * switchWidthMultiplier\n              },\n              outerCircleStyle\n            ]}\n          >\n            {value && renderActiveText && (\n              <Text style={[styles.text, styles.paddingRight, activeTextStyle]}>\n                {activeText}\n              </Text>\n            )}\n\n            <Animated.View\n              style={[\n                styles.circle,\n                {\n                  borderWidth: circleBorderWidth,\n                  borderColor: interpolatedCircleBorderColor,\n                  backgroundColor: interpolatedCircleColor,\n                  width: circleSize,\n                  height: circleSize,\n                  borderRadius: circleSize / 2\n                },\n                innerCircleStyle\n              ]}\n            >\n              {renderInsideCircle()}\n            </Animated.View>\n            {!value && renderInActiveText && (\n              <Text\n                style={[styles.text, styles.paddingLeft, inactiveTextStyle]}\n              >\n                {inActiveText}\n              </Text>\n            )}\n          </Animated.View>\n        </Animated.View>\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: 71,\n    height: 30,\n    borderRadius: 30,\n    backgroundColor: \"black\"\n  },\n  animatedContainer: {\n    flex: 1,\n    width: 78,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  circle: {\n    width: 30,\n    height: 30,\n    borderRadius: 15,\n    backgroundColor: \"white\"\n  },\n  text: {\n    color: \"white\",\n    backgroundColor: \"transparent\"\n  },\n  paddingRight: {\n    paddingRight: 5\n  },\n  paddingLeft: {\n    paddingLeft: 5\n  }\n});\n"]}